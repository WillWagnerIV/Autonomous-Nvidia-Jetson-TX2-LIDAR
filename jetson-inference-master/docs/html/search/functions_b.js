var searchData=
[
  ['lastchild',['LastChild',['../classtinyxml2_1_1XMLNode.html#a9b8583a277e8e26f4cbbb5492786778e',1,'tinyxml2::XMLNode::LastChild() const'],['../classtinyxml2_1_1XMLNode.html#ad7552c8cb1dc0cb6f3bdc14a9d115dbf',1,'tinyxml2::XMLNode::LastChild()'],['../classtinyxml2_1_1XMLHandle.html#a9d09f04435f0f2f7d0816b0198d0517b',1,'tinyxml2::XMLHandle::LastChild()'],['../classtinyxml2_1_1XMLConstHandle.html#a908436124990f3d7b35cb7df20d31d9e',1,'tinyxml2::XMLConstHandle::LastChild()']]],
  ['lastchildelement',['LastChildElement',['../classtinyxml2_1_1XMLNode.html#a173e9d1341bc56992e2d320a35936551',1,'tinyxml2::XMLNode::LastChildElement(const char *name=0) const'],['../classtinyxml2_1_1XMLNode.html#a1b77a8194d059665a4412ebfea276878',1,'tinyxml2::XMLNode::LastChildElement(const char *name=0)'],['../classtinyxml2_1_1XMLHandle.html#a42cccd0ce8b1ce704f431025e9f19e0c',1,'tinyxml2::XMLHandle::LastChildElement()'],['../classtinyxml2_1_1XMLConstHandle.html#a9de0475ec42bd50c0e64624a250ba5b2',1,'tinyxml2::XMLConstHandle::LastChildElement()']]],
  ['linkendchild',['LinkEndChild',['../classtinyxml2_1_1XMLNode.html#a663e3a5a378169fd477378f4d17a7649',1,'tinyxml2::XMLNode']]],
  ['loadclasscolors',['loadClassColors',['../classsegNet.html#a218a2c71cb4d59476070385c7370f789',1,'segNet']]],
  ['loadclassdesc',['loadClassDesc',['../classdetectNet.html#a812068e3db1f9f991e84a217e275b1e0',1,'detectNet']]],
  ['loadclassinfo',['LoadClassInfo',['../classimageNet.html#a874e53e6172211c555031e50c6391f98',1,'imageNet::LoadClassInfo(const char *filename, std::vector&lt; std::string &gt; &amp;descriptions, int expectedClasses=-1)'],['../classimageNet.html#ab21eae64422a301712bf84252ede634d',1,'imageNet::LoadClassInfo(const char *filename, std::vector&lt; std::string &gt; &amp;descriptions, std::vector&lt; std::string &gt; &amp;synsets, int expectedClasses=-1)'],['../classimageNet.html#a6beef2c8d0972eaadad37abc89e74f95',1,'imageNet::loadClassInfo(const char *filename, int expectedClasses=-1)']]],
  ['loadclasslabels',['loadClassLabels',['../classsegNet.html#a31d2bd6ddf05ce178a8e6c5b88247075',1,'segNet']]],
  ['loadfile',['LoadFile',['../classtinyxml2_1_1XMLDocument.html#a2ebd4647a8af5fc6831b294ac26a150a',1,'tinyxml2::XMLDocument::LoadFile(const char *filename)'],['../classtinyxml2_1_1XMLDocument.html#a5f1d330fad44c52f3d265338dd2a6dc2',1,'tinyxml2::XMLDocument::LoadFile(FILE *)']]],
  ['loadimagebgr',['loadImageBGR',['../group__image.html#gab0f496972aab71df789fe6ec2da13f5f',1,'imageIO.h']]],
  ['loadimagergb',['loadImageRGB',['../group__image.html#ga111365a53f058201561e472e1780829e',1,'imageIO.h']]],
  ['loadimagergba',['loadImageRGBA',['../group__image.html#ga144a95bc7f1c58aeda68cc135355acac',1,'imageIO.h']]],
  ['loadnetwork',['LoadNetwork',['../classtensorNet.html#a2e63d4670461814bd863ee0d9bd41526',1,'tensorNet::LoadNetwork(const char *prototxt, const char *model, const char *mean=NULL, const char *input_blob=&quot;data&quot;, const char *output_blob=&quot;prob&quot;, uint32_t maxBatchSize=DEFAULT_MAX_BATCH_SIZE, precisionType precision=TYPE_FASTEST, deviceType device=DEVICE_GPU, bool allowGPUFallback=true, nvinfer1::IInt8Calibrator *calibrator=NULL, cudaStream_t stream=NULL)'],['../classtensorNet.html#a0a06ffd12b465f39160f4a6925cccd9f',1,'tensorNet::LoadNetwork(const char *prototxt, const char *model, const char *mean, const char *input_blob, const std::vector&lt; std::string &gt; &amp;output_blobs, uint32_t maxBatchSize=DEFAULT_MAX_BATCH_SIZE, precisionType precision=TYPE_FASTEST, deviceType device=DEVICE_GPU, bool allowGPUFallback=true, nvinfer1::IInt8Calibrator *calibrator=NULL, cudaStream_t stream=NULL)'],['../classtensorNet.html#a168c7f75c9fd6d264afd016e144f3878',1,'tensorNet::LoadNetwork(const char *prototxt, const char *model, const char *mean, const char *input_blob, const Dims3 &amp;input_dims, const std::vector&lt; std::string &gt; &amp;output_blobs, uint32_t maxBatchSize=DEFAULT_MAX_BATCH_SIZE, precisionType precision=TYPE_FASTEST, deviceType device=DEVICE_GPU, bool allowGPUFallback=true, nvinfer1::IInt8Calibrator *calibrator=NULL, cudaStream_t stream=NULL)']]],
  ['locatefile',['locateFile',['../group__filesystem.html#ga09605d11f78fcd2d936793371d1c2ccc',1,'locateFile(const std::string &amp;path):&#160;filesystem.h'],['../group__filesystem.html#ga0209cabb0f62f9cfec99a763b5a0bbd1',1,'locateFile(const std::string &amp;path, std::vector&lt; std::string &gt; &amp;locations):&#160;filesystem.h']]],
  ['lock',['Lock',['../classMutex.html#ae5cb54c9c45f90e29206d5679a3b1c7f',1,'Mutex']]],
  ['lockaffinity',['LockAffinity',['../classThread.html#a786ef18c62603f0fe041e95391637740',1,'Thread']]]
];
